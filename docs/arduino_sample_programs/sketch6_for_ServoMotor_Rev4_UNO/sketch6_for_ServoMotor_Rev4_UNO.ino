#include "Arduino.h"
#include "avr/io.h"
#include "Servo.h"
//==================================================================
//  探索ロボットの製作【使用ユニット】センサユニットB/C
//  サーボモータが0～180度範囲内を繰り返し連続動作する
//  Arduino UNO/MEGA共用（AVRマイコン）プログラム
//  2025.3.27  Rev.4  H.Sasaki 
//  Servo.hライブラリ使用のため，D9,D10のPWM使用不可
//  ★サーボモータが回転しない場合は電源容量を上げること
//==================================================================
Servo myservo;  //Servoオブジェクトの宣言
                  /*サーボモータを複数使用する場合は，myservo1, myservo2 のように
　　　　　　　　　　並べて表現できる*/

void setup() {

  myservo.attach(10,800,2200);
  /* 【使用例】myservo.attach(pin, MinPulse, MaxPulse)
   *  pin: servo変数を１０番ピンに割り当てる（9番，10番の利用を推奨）
   *  MinPulse: 0度（サーボ角度0度位置）におけるパルス時間(uS) 初期値は544mS
   *  MaxPulse: 180度（サーボ角度180度位置）におけるパルス時間(uS) 初期値は2400mS
   *  【注意】SG90サーボモータの場合，1～2mS(PWM）at 0～180deg のため
   *  　　　　"attach(10,1000,2000)"であるが，若干のマージンを持たせた方が良い  
   */

}
 
void loop(){
  /*0度から180度の範囲を回転するためには2つの方法がある
   * PWMパルス幅の時間指定でステップ制御する方法は，より滑らかな動作となるが，実際に評価し選択すること
   */
//　(1)角度指定で制御する方法（181段階可変）
      myservo.write(0); //初期角度指定（正面90度，一番右180度）
      delay(500);  //初期角度指定及びこのdelayはなくても動作するが、初期角度まで戻り切れないことがある
       
      for(int i=0; i<=180; i++){
        myservo.write(i);
        delayMicroseconds(4400); //値が小さい場合は高速だが，駆動音が大きく滑らかさが減少する
        //【参考】SG90の動作速度スペックは，100mS/60deg
      }
      delay(2000); 
      
 //(2)パルス時間指定で制御する方法((1)とは回転方向が逆になる) 
/*      myservo.write(180); 
      delay(500);
      for(int i=2200; i>=800; i--){

        myservo.writeMicroseconds(i);
        delay(1);
      }
      delay(2000);*/
}
